// =============================================================================
//
// ztd.encoding_tables
// Copyright Â© JeanHeyd "ThePhD" Meneide and Shepherd's Oasis, LLC
// Contact: opensource@soasis.org
//
// Commercial License Usage
// Licensees holding valid commercial ztd.encoding_tables licenses may use
// this file in accordance with the commercial license agreement provided
// with the Software or, alternatively, in accordance with the terms
// contained in a written agreement between you and Shepherd's Oasis, LLC.
// For licensing terms and conditions see your agreement. For
// further information contact opensource@soasis.org.
//
// Apache License Version 2 Usage
// Alternatively, this file may be used under the terms of Apache License
// Version 2.0 (the "License") for non-commercial use; you may not use
// this file except in compliance with the License. You may obtain a copy
// of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ============================================================================ //

#pragma once

#ifndef ZTD_ENCODING_TABLES_WINDOWS_874_TABLES_H
#define ZTD_ENCODING_TABLES_WINDOWS_874_TABLES_H

#include <ztd/encoding_tables/version.h>

#include <ztd/encoding_tables/table_types.h>

ZTD_EXTERN_C_I_ bool ztdc_windows_874_index_to_code_point(size_t __lookup_index_pointer, uint_least32_t* __p_code_point)
     ZTD_USE(ZTD_NOEXCEPT_IF_CXX);
ZTD_EXTERN_C_I_ bool ztdc_windows_874_code_point_to_index(uint_least32_t __lookup_code_point, size_t* __p_index)
     ZTD_USE(ZTD_NOEXCEPT_IF_CXX);

ZTD_ENCODING_TABLES_EXTERN_I_ ZTD_INLINE_CONSTEXPR_IF_CXX_I_ const ztd_et_index16_code_point_t
     ztd_et_windows_874_index_code_point_map[128]
#if ZTD_IS_ON(ZTD_ENCODING_TABLES_DEFINITION_IS_CONSTEXPR)
     = {
	       { (0x80 - 0x80), 0x20AC },
	       { (0x81 - 0x80), 0xFFFF },
	       { (0x82 - 0x80), 0xFFFF },
	       { (0x83 - 0x80), 0xFFFF },
	       { (0x84 - 0x80), 0xFFFF },
	       { (0x85 - 0x80), 0x2026 },
	       { (0x86 - 0x80), 0xFFFF },
	       { (0x87 - 0x80), 0xFFFF },
	       { (0x88 - 0x80), 0xFFFF },
	       { (0x89 - 0x80), 0xFFFF },
	       { (0x8A - 0x80), 0xFFFF },
	       { (0x8B - 0x80), 0xFFFF },
	       { (0x8C - 0x80), 0xFFFF },
	       { (0x8D - 0x80), 0xFFFF },
	       { (0x8E - 0x80), 0xFFFF },
	       { (0x8F - 0x80), 0xFFFF },
	       { (0x90 - 0x80), 0xFFFF },
	       { (0x91 - 0x80), 0x2018 },
	       { (0x92 - 0x80), 0x2019 },
	       { (0x93 - 0x80), 0x201C },
	       { (0x94 - 0x80), 0x201D },
	       { (0x95 - 0x80), 0x2022 },
	       { (0x96 - 0x80), 0x2013 },
	       { (0x97 - 0x80), 0x2014 },
	       { (0x98 - 0x80), 0xFFFF },
	       { (0x99 - 0x80), 0xFFFF },
	       { (0x9A - 0x80), 0xFFFF },
	       { (0x9B - 0x80), 0xFFFF },
	       { (0x9C - 0x80), 0xFFFF },
	       { (0x9D - 0x80), 0xFFFF },
	       { (0x9E - 0x80), 0xFFFF },
	       { (0x9F - 0x80), 0xFFFF },
	       { (0xA0 - 0x80), 0x00A0 },
	       { (0xA1 - 0x80), 0x0E01 },
	       { (0xA2 - 0x80), 0x0E02 },
	       { (0xA3 - 0x80), 0x0E03 },
	       { (0xA4 - 0x80), 0x0E04 },
	       { (0xA5 - 0x80), 0x0E05 },
	       { (0xA6 - 0x80), 0x0E06 },
	       { (0xA7 - 0x80), 0x0E07 },
	       { (0xA8 - 0x80), 0x0E08 },
	       { (0xA9 - 0x80), 0x0E09 },
	       { (0xAA - 0x80), 0x0E0A },
	       { (0xAB - 0x80), 0x0E0B },
	       { (0xAC - 0x80), 0x0E0C },
	       { (0xAD - 0x80), 0x0E0D },
	       { (0xAE - 0x80), 0x0E0E },
	       { (0xAF - 0x80), 0x0E0F },
	       { (0xB0 - 0x80), 0x0E10 },
	       { (0xB1 - 0x80), 0x0E11 },
	       { (0xB2 - 0x80), 0x0E12 },
	       { (0xB3 - 0x80), 0x0E13 },
	       { (0xB4 - 0x80), 0x0E14 },
	       { (0xB5 - 0x80), 0x0E15 },
	       { (0xB6 - 0x80), 0x0E16 },
	       { (0xB7 - 0x80), 0x0E17 },
	       { (0xB8 - 0x80), 0x0E18 },
	       { (0xB9 - 0x80), 0x0E19 },
	       { (0xBA - 0x80), 0x0E1A },
	       { (0xBB - 0x80), 0x0E1B },
	       { (0xBC - 0x80), 0x0E1C },
	       { (0xBD - 0x80), 0x0E1D },
	       { (0xBE - 0x80), 0x0E1E },
	       { (0xBF - 0x80), 0x0E1F },
	       { (0xC0 - 0x80), 0x0E20 },
	       { (0xC1 - 0x80), 0x0E21 },
	       { (0xC2 - 0x80), 0x0E22 },
	       { (0xC3 - 0x80), 0x0E23 },
	       { (0xC4 - 0x80), 0x0E24 },
	       { (0xC5 - 0x80), 0x0E25 },
	       { (0xC6 - 0x80), 0x0E26 },
	       { (0xC7 - 0x80), 0x0E27 },
	       { (0xC8 - 0x80), 0x0E28 },
	       { (0xC9 - 0x80), 0x0E29 },
	       { (0xCA - 0x80), 0x0E2A },
	       { (0xCB - 0x80), 0x0E2B },
	       { (0xCC - 0x80), 0x0E2C },
	       { (0xCD - 0x80), 0x0E2D },
	       { (0xCE - 0x80), 0x0E2E },
	       { (0xCF - 0x80), 0x0E2F },
	       { (0xD0 - 0x80), 0x0E30 },
	       { (0xD1 - 0x80), 0x0E31 },
	       { (0xD2 - 0x80), 0x0E32 },
	       { (0xD3 - 0x80), 0x0E33 },
	       { (0xD4 - 0x80), 0x0E34 },
	       { (0xD5 - 0x80), 0x0E35 },
	       { (0xD6 - 0x80), 0x0E36 },
	       { (0xD7 - 0x80), 0x0E37 },
	       { (0xD8 - 0x80), 0x0E38 },
	       { (0xD9 - 0x80), 0x0E39 },
	       { (0xDA - 0x80), 0x0E3A },
	       { (0xDB - 0x80), 0xFFFF },
	       { (0xDC - 0x80), 0xFFFF },
	       { (0xDD - 0x80), 0xFFFF },
	       { (0xDE - 0x80), 0xFFFF },
	       { (0xDF - 0x80), 0x0E3F },
	       { (0xE0 - 0x80), 0x0E40 },
	       { (0xE1 - 0x80), 0x0E41 },
	       { (0xE2 - 0x80), 0x0E42 },
	       { (0xE3 - 0x80), 0x0E43 },
	       { (0xE4 - 0x80), 0x0E44 },
	       { (0xE5 - 0x80), 0x0E45 },
	       { (0xE6 - 0x80), 0x0E46 },
	       { (0xE7 - 0x80), 0x0E47 },
	       { (0xE8 - 0x80), 0x0E48 },
	       { (0xE9 - 0x80), 0x0E49 },
	       { (0xEA - 0x80), 0x0E4A },
	       { (0xEB - 0x80), 0x0E4B },
	       { (0xEC - 0x80), 0x0E4C },
	       { (0xED - 0x80), 0x0E4D },
	       { (0xEE - 0x80), 0x0E4E },
	       { (0xEF - 0x80), 0x0E4F },
	       { (0xF0 - 0x80), 0x0E50 },
	       { (0xF1 - 0x80), 0x0E51 },
	       { (0xF2 - 0x80), 0x0E52 },
	       { (0xF3 - 0x80), 0x0E53 },
	       { (0xF4 - 0x80), 0x0E54 },
	       { (0xF5 - 0x80), 0x0E55 },
	       { (0xF6 - 0x80), 0x0E56 },
	       { (0xF7 - 0x80), 0x0E57 },
	       { (0xF8 - 0x80), 0x0E58 },
	       { (0xF9 - 0x80), 0x0E59 },
	       { (0xFA - 0x80), 0x0E5A },
	       { (0xFB - 0x80), 0x0E5B },
	       { (0xFC - 0x80), 0xFFFF },
	       { (0xFD - 0x80), 0xFFFF },
	       { (0xFE - 0x80), 0xFFFF },
	       { (0xFF - 0x80), 0xFFFF },
       };
#else
     ;
#endif

#endif
